{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICARU\\\\OneDrive\\\\Documentos\\\\Programa\\xE7ao\\\\One-Oracle-Curso\\\\React\\\\agendamento\\\\src\\\\components\\\\FormularioCadastro\\\\Corte.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport ValidacoesCadastro from \"../../contexts/ValidacoesCadastro\";\nimport useErros from \"../../models/hooks/useErros\";\nfunction Corte(_ref) {\n  let {\n    aoEnviar\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [corte1, setCorte1] = useState(\"\");\n  const [corte2, setCorte2] = useState(\"\");\n  const [corte3, setCorte3] = useState(\"\");\n\n  // const validacoes = useContext(ValidacoesCadastro)\n  // const [erros, validarCampos, possoEnviar] = useErros(validacoes);\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = [{\n    label: \"Opção 1\",\n    image: \"/path/to/image1.jpg\"\n  }, {\n    label: \"Opção 2\",\n    image: \"/path/to/image2.jpg\"\n  }, {\n    label: \"Opção 3\",\n    image: \"/path/to/image3.jpg\"\n  }];\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      // if (possoEnviar()) {\n      aoEnviar({\n        corte1,\n        corte2,\n        corte3\n      });\n      // }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, options.map((option, index) => /*#__PURE__*/React.createElement(ButtonGroup, {\n    key: index,\n    variant: \"text\",\n    \"aria-label\": \"outlined button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSelectedOption(index),\n    color: selectedOption === index ? \"primary\" : \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    image: option.image,\n    alt: option.label,\n    height: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, option.label))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Pr\\xF3ximo\"));\n}\nexport default Corte;","map":{"version":3,"names":["React","useState","useContext","Button","ButtonGroup","ValidacoesCadastro","useErros","Corte","_ref","aoEnviar","email","setEmail","corte1","setCorte1","corte2","setCorte2","corte3","setCorte3","selectedOption","setSelectedOption","options","label","image","createElement","onSubmit","event","preventDefault","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Card","map","option","index","key","variant","onClick","color","CardMedia","component","alt","height","Typography","type"],"sources":["C:/Users/ICARU/OneDrive/Documentos/Programaçao/One-Oracle-Curso/React/agendamento/src/components/FormularioCadastro/Corte.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport ValidacoesCadastro from \"../../contexts/ValidacoesCadastro\";\r\nimport useErros from \"../../models/hooks/useErros\";\r\n\r\nfunction Corte({ aoEnviar }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [corte1, setCorte1] = useState(\"\");\r\n  const [corte2, setCorte2] = useState(\"\");\r\n  const [corte3, setCorte3] = useState(\"\");\r\n\r\n  // const validacoes = useContext(ValidacoesCadastro)\r\n  // const [erros, validarCampos, possoEnviar] = useErros(validacoes);\r\n  \r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const options = [\r\n    { label: \"Opção 1\", image: \"/path/to/image1.jpg\" },\r\n    { label: \"Opção 2\", image: \"/path/to/image2.jpg\" },\r\n    { label: \"Opção 3\", image: \"/path/to/image3.jpg\" },\r\n  ];\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        // if (possoEnviar()) {\r\n          aoEnviar({ corte1, corte2, corte3 });\r\n        // }\r\n      }}\r\n    >\r\n      <Card>\r\n        {options.map((option, index) => (\r\n          <ButtonGroup key={index} variant=\"text\" aria-label=\"outlined button group\">\r\n            <Button\r\n              onClick={() => setSelectedOption(index)}\r\n              color={selectedOption === index ? \"primary\" : \"default\"}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                image={option.image}\r\n                alt={option.label}\r\n                height=\"100\"\r\n              />\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {option.label}\r\n              </Typography>\r\n            </Button>\r\n          </ButtonGroup>\r\n        ))}\r\n      </Card>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Próximo\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Corte;"],"mappings":"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"},"metadata":{},"sourceType":"module"}